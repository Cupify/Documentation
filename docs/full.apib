FORMAT: 1A

# Cupify API documentation


# Group Authentication
## Session [/auth]

### Login [POST]
Add more information about this request.

+ Request Facebook (application/json)

    + Body

            {
              "facebookToken": "fdsfsdfs"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "facebookToken": {
                  "type": "string",
                  "description": "Facebook session token."
                }
              },
              "required": ["facebookToken"]
            }

+ Request Google (application/json)

    + Body

            {
              "googleToken": "fdsfsdfs"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "googleToken": {
                  "type": "string",
                  "description": "Google session token."
                }
              },
              "required": ["googleToken"]
            }

+ Request Twitter (application/json)

    + Body

            {
              "twitterToken": "fdsfsdfs"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "twitterToken": {
                  "type": "string",
                  "description": "Twitter session token."
                }
              },
              "required": ["twitterToken"]
            }

+ Response 200 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 200,
              "cupify": {
                "userId": "h1u4Rye9",
                "token": "dasdasdasdasda",
                "secret": "dasdaf"
              }
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "cupify": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    }
                  },
                  "required": ["token", "secret"]
                }
              },
              "required": ["status", "cupify"]
            }

+ Response 401 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 401,
              "error": "The provided credentials are not valid."
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "error": {
                  "type": "string"
                }
              },
              "required": ["status", "error"]
            }


### Logout [DELETE]
Add more information about this request.

+ Request Example

    + Headers

            Authorization: fsdfsfsfsdfsdfsdfd

+ Response 200 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 200
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                }
              },
              "required": ["status"]
            }

+ Response 403 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 403,
              "error": "The provided authentication token is not valid."
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "error": {
                  "type": "string"
                }
              },
              "required": ["status", "error"]
            }

# Group Users
## Profile [/users/{userId}]

+ Parameters

    + userId: h1u4Rye9 (string, required) - A unique user identifier.

### Get [GET]
Add more information about this request.

+ Request Example (application/json)

    + Headers

            Authorization: bd3c37e77fca3a513947991ca4d3c40bf0098a4b

    + Body

            {
              "facebookToken": "fdsfsdfs"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "facebookToken": {
                  "type": "string",
                  "description": "Facebook session token."
                }
              },
              "required": ["facebookToken"]
            }

+ Response 200 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 200,
              "user": {
                "username": "cupify",
                "avatar": "https://cdn.cupify.me/avatar/h1u4Rye9.webp",
                "lastSeen": 1510795171
              }
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "integer"
                    },
                    "avatar": {
                      "type": "integer"
                    },
                    "lastSeen": {
                      "type": "integer",
                      "description": "Unix timestamp of user's last activity."
                    }
                  },
                  "required": ["username", "avatar", "lastSeen"]
                }
              },
              "required": ["status", "user"]
            }

+ Response 403 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 401,
              "error": "The provided credentials are not valid."
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "error": {
                  "type": "string"
                }
              },
              "required": ["status", "error"]
            }

+ Response 404 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 401,
              "error": "The requested user could not be found."
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "error": {
                  "type": "string"
                }
              },
              "required": ["status", "error"]
            }


### Update [PUT]
Profiles may only be updated by their owners.

+ Request Example

    + Headers

            Authorization: fsdfsfsfsdfsdfsdfd

+ Response 200 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 200
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                }
              },
              "required": ["status"]
            }

+ Response 403 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 403,
              "error": "The provided authentication token is not valid."
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "error": {
                  "type": "string"
                }
              },
              "required": ["status", "error"]
            }


## Location [/users/{userId}/location]

+ Parameters

    + userId: h1u4Rye9 (string, required) - A unique user identifier.

### Location [POST]
Add more information about this request.

+ Request Example (application/json)

    + Headers

            Authorization: bd3c37e77fca3a513947991ca4d3c40bf0098a4b

    + Body

            {
              "lat": 37.77493,
              "lon": -122.419416
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "lat": {
                  "type": "number"
                },
                "lon": {
                  "type": "number"
                }
              },
              "required": ["lat", "lon"]
            }

+ Response 200 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 200
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                }
              },
              "required": ["status"]
            }

+ Response 403 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 403,
              "error": "The provided authentication token is not valid."
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "error": {
                  "type": "string"
                }
              },
              "required": ["status", "error"]
            }


## Report [/users/{userId}/report]

+ Parameters

    + userId: h1u4Rye9 (string, required) - A unique user identifier.

### Report [POST]
Add more information about this request.

+ Request Example (application/json)

    + Headers

            Authorization: bd3c37e77fca3a513947991ca4d3c40bf0098a4b

    + Body

            {
              "reason": "spam"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "reason": {
                  "type": "string",
                  "enum": ["spam", "offensive"]
                }
              },
              "required": ["reason"]
            }

+ Response 200 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 200
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                }
              },
              "required": ["status"]
            }

+ Response 403 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 403,
              "error": "The provided authentication token is not valid."
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "error": {
                  "type": "string"
                }
              },
              "required": ["status", "error"]
            }

+ Response 404 (application/json)

      + Headers

            Content-Transfer-Encoding: application/gzip

      + Body

            {
              "status": 401,
              "error": "The requested user could not be found."
            }

      + Schema

            {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer"
                },
                "error": {
                  "type": "string"
                }
              },
              "required": ["status", "error"]
            }
